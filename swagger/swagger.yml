swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /cargo/:
    get:
      tags:
      - cargo
      description: get Cargo
      operationId: CargoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cargo'
        "404":
          description: not found resource
    post:
      tags:
      - cargo
      description: create Cargo
      operationId: CargoController.Post
      parameters:
      - in: body
        name: body
        description: body for Cargo content
        required: true
        schema:
          $ref: '#/definitions/models.Cargo'
      responses:
        "201":
          description: '{int} models.Cargo'
        "400":
          description: the request contains incorrect syntax
  /cargo/{id}:
    get:
      tags:
      - cargo
      description: get Cargo by id
      operationId: CargoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cargo'
        "404":
          description: not found resource
    put:
      tags:
      - cargo
      description: update the Cargo
      operationId: CargoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Cargo content
        required: true
        schema:
          $ref: '#/definitions/models.Cargo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cargo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - cargo
      description: delete the Cargo
      operationId: CargoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /dato_adicional_experiencia_laboral/:
    get:
      tags:
      - dato_adicional_experiencia_laboral
      description: get DatoAdicionalExperienciaLaboral
      operationId: DatoAdicionalExperienciaLaboralController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DatoAdicionalExperienciaLaboral'
        "404":
          description: not found resource
    post:
      tags:
      - dato_adicional_experiencia_laboral
      description: create DatoAdicionalExperienciaLaboral
      operationId: DatoAdicionalExperienciaLaboralController.Post
      parameters:
      - in: body
        name: body
        description: body for DatoAdicionalExperienciaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.DatoAdicionalExperienciaLaboral'
      responses:
        "201":
          description: '{int} models.DatoAdicionalExperienciaLaboral'
        "400":
          description: the request contains incorrect syntax
  /dato_adicional_experiencia_laboral/{id}:
    get:
      tags:
      - dato_adicional_experiencia_laboral
      description: get DatoAdicionalExperienciaLaboral by id
      operationId: DatoAdicionalExperienciaLaboralController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DatoAdicionalExperienciaLaboral'
        "404":
          description: not found resource
    put:
      tags:
      - dato_adicional_experiencia_laboral
      description: update the DatoAdicionalExperienciaLaboral
      operationId: DatoAdicionalExperienciaLaboralController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DatoAdicionalExperienciaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.DatoAdicionalExperienciaLaboral'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DatoAdicionalExperienciaLaboral'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - dato_adicional_experiencia_laboral
      description: delete the DatoAdicionalExperienciaLaboral
      operationId: DatoAdicionalExperienciaLaboralController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /experiencia_laboral/:
    get:
      tags:
      - experiencia_laboral
      description: get ExperienciaLaboral
      operationId: ExperienciaLaboralController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExperienciaLaboral'
        "404":
          description: not found resource
    post:
      tags:
      - experiencia_laboral
      description: create ExperienciaLaboral
      operationId: ExperienciaLaboralController.Post
      parameters:
      - in: body
        name: body
        description: body for ExperienciaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.ExperienciaLaboral'
      responses:
        "201":
          description: '{int} models.ExperienciaLaboral'
        "400":
          description: the request contains incorrect syntax
  /experiencia_laboral/{id}:
    get:
      tags:
      - experiencia_laboral
      description: get ExperienciaLaboral by id
      operationId: ExperienciaLaboralController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExperienciaLaboral'
        "404":
          description: not found resource
    put:
      tags:
      - experiencia_laboral
      description: update the ExperienciaLaboral
      operationId: ExperienciaLaboralController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ExperienciaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.ExperienciaLaboral'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExperienciaLaboral'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - experiencia_laboral
      description: delete the ExperienciaLaboral
      operationId: ExperienciaLaboralController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /relacion_cargos/:
    get:
      tags:
      - relacion_cargos
      description: get RelacionCargos
      operationId: RelacionCargosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionCargos'
        "404":
          description: not found resource
    post:
      tags:
      - relacion_cargos
      description: create RelacionCargos
      operationId: RelacionCargosController.Post
      parameters:
      - in: body
        name: body
        description: body for RelacionCargos content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionCargos'
      responses:
        "201":
          description: '{int} models.RelacionCargos'
        "400":
          description: the request contains incorrect syntax
  /relacion_cargos/{id}:
    get:
      tags:
      - relacion_cargos
      description: get RelacionCargos by id
      operationId: RelacionCargosController.Get
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionCargos'
        "404":
          description: not found resource
    put:
      tags:
      - relacion_cargos
      description: update the RelacionCargos
      operationId: RelacionCargosController.Update
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RelacionCargos content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionCargos'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionCargos'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - relacion_cargos
      description: delete the RelacionCargos
      operationId: RelacionCargosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /soporte_experiencia_laboral/:
    get:
      tags:
      - soporte_experiencia_laboral
      description: get SoporteExperienciaLaboral
      operationId: SoporteExperienciaLaboralController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoporteExperienciaLaboral'
        "404":
          description: not found resource
    post:
      tags:
      - soporte_experiencia_laboral
      description: create SoporteExperienciaLaboral
      operationId: SoporteExperienciaLaboralController.Post
      parameters:
      - in: body
        name: body
        description: body for SoporteExperienciaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.SoporteExperienciaLaboral'
      responses:
        "201":
          description: '{int} models.SoporteExperienciaLaboral'
        "400":
          description: the request contains incorrect syntax
  /soporte_experiencia_laboral/{id}:
    get:
      tags:
      - soporte_experiencia_laboral
      description: get SoporteExperienciaLaboral by id
      operationId: SoporteExperienciaLaboralController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoporteExperienciaLaboral'
        "404":
          description: not found resource
    put:
      tags:
      - soporte_experiencia_laboral
      description: update the SoporteExperienciaLaboral
      operationId: SoporteExperienciaLaboralController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SoporteExperienciaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.SoporteExperienciaLaboral'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoporteExperienciaLaboral'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - soporte_experiencia_laboral
      description: delete the SoporteExperienciaLaboral
      operationId: SoporteExperienciaLaboralController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_dedicacion/:
    get:
      tags:
      - tipo_dedicacion
      description: get TipoDedicacion
      operationId: TipoDedicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDedicacion'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_dedicacion
      description: create TipoDedicacion
      operationId: TipoDedicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoDedicacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDedicacion'
      responses:
        "201":
          description: '{int} models.TipoDedicacion'
        "400":
          description: the request contains incorrect syntax
  /tipo_dedicacion/{id}:
    get:
      tags:
      - tipo_dedicacion
      description: get TipoDedicacion by id
      operationId: TipoDedicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDedicacion'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_dedicacion
      description: update the TipoDedicacion
      operationId: TipoDedicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoDedicacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDedicacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDedicacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_dedicacion
      description: delete the TipoDedicacion
      operationId: TipoDedicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_vinculacion/:
    get:
      tags:
      - tipo_vinculacion
      description: get TipoVinculacion
      operationId: TipoVinculacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoVinculacion'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_vinculacion
      description: create TipoVinculacion
      operationId: TipoVinculacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoVinculacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoVinculacion'
      responses:
        "201":
          description: '{int} models.TipoVinculacion'
        "400":
          description: the request contains incorrect syntax
  /tipo_vinculacion/{id}:
    get:
      tags:
      - tipo_vinculacion
      description: get TipoVinculacion by id
      operationId: TipoVinculacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoVinculacion'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_vinculacion
      description: update the TipoVinculacion
      operationId: TipoVinculacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoVinculacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoVinculacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoVinculacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_vinculacion
      description: delete the TipoVinculacion
      operationId: TipoVinculacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
definitions:
  models.Cargo:
    title: Cargo
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.DatoAdicionalExperienciaLaboral:
    title: DatoAdicionalExperienciaLaboral
    type: object
    properties:
      Activo:
        type: boolean
      ExperienciaLaboral:
        $ref: '#/definitions/models.ExperienciaLaboral'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      TipoDatoAdicional:
        type: integer
        format: int64
      Valor:
        type: string
  models.ExperienciaLaboral:
    title: ExperienciaLaboral
    type: object
    properties:
      Actividades:
        type: string
      Cargo:
        $ref: '#/definitions/models.Cargo'
      FechaCreacion:
        type: string
      FechaFinalizacion:
        type: string
        format: datetime
      FechaInicio:
        type: string
        format: datetime
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        type: integer
        format: int64
      Persona:
        type: integer
        format: int64
      TipoDedicacion:
        $ref: '#/definitions/models.TipoDedicacion'
      TipoVinculacion:
        $ref: '#/definitions/models.TipoVinculacion'
  models.RelacionCargos:
    title: RelacionCargos
    type: object
    properties:
      Activo:
        type: boolean
      CargoHijo:
        $ref: '#/definitions/models.Cargo'
      CargoPadre:
        $ref: '#/definitions/models.Cargo'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
  models.SoporteExperienciaLaboral:
    title: SoporteExperienciaLaboral
    type: object
    properties:
      Descripcion:
        type: string
      Documento:
        type: integer
        format: int64
      ExperienciaLaboral:
        $ref: '#/definitions/models.ExperienciaLaboral'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoDedicacion:
    title: TipoDedicacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoVinculacion:
    title: TipoVinculacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
tags:
- name: tipo_dedicacion
  description: |
    TipoDedicacionController operations for TipoDedicacion
- name: cargo
  description: |
    CargoController operations for Cargo
- name: soporte_experiencia_laboral
  description: |
    SoporteExperienciaLaboralController operations for SoporteExperienciaLaboral
- name: dato_adicional_experiencia_laboral
  description: |
    DatoAdicionalExperienciaLaboralController operations for DatoAdicionalExperienciaLaboral
- name: tipo_vinculacion
  description: |
    TipoVinculacionController operations for TipoVinculacion
- name: experiencia_laboral
  description: |
    ExperienciaLaboralController operations for ExperienciaLaboral
- name: relacion_cargos
  description: |
    oprations for RelacionCargos
